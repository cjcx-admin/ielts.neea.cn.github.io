! function(b) {
    var d = window.layui && layui.define,
        e = {
            getPath: function() {
                var f = document.currentScript ? document.currentScript.src : function() {
                    var j = document.scripts,
                        h = j.length - 1,
                        k;
                    for (var g = h; g > 0; g--) {
                        if (j[g].readyState === "interactive") {
                            k = j[g].src;
                            break
                        }
                    }
                    return k || j[h].src
                }();
                return f.substring(0, f.lastIndexOf("/") + 1)
            }(),
            getStyle: function(h, f) {
                var g = h.currentStyle ? h.currentStyle : window.getComputedStyle(h, null);
                return g[g.getPropertyValue ? "getPropertyValue" : "getAttribute"](f)
            },
            link: function(f, m, g) {
                var n = document.getElementsByTagName("head")[0],
                    l = document.createElement("link");
                if (typeof m === "string") {
                    g = m
                }
                var i = (g || f).replace(/\.|\//g, "");
                var h = "layuicss-" + i,
                    k = 0;
                l.rel = "stylesheet";
                l.href = e.getPath + f;
                l.id = h;
                if (!document.getElementById(h)) {
                    n.appendChild(l)
                }
                if (typeof m !== "function") {
                    return
                }(function j() {
                    if (++k > 8 * 1000 / 100) {
                        return window.console && console.error("laydatePro.css: Invalid")
                    }
                    parseInt(e.getStyle(document.getElementById(h), "width")) === 1989 ? m() : setTimeout(j, 100)
                }())
            }
        },
        c = "laydatePro",
        a = {
            v: "1.0.0",
            ready: function(g) {
                var h = c + ".css?v=" + a.v;
                if (d) {
                    var f = layui.cache.modules[c].substr(0, layui.cache.modules[c].lastIndexOf("/") + 1);
                    layui.link(f + h, g, c)
                } else {
                    e.link(h, g, c)
                }
                return this
            }
        };
    if (d) {
        layui.define(["jquery", "laydate"], function(f) {
            f(c, b(layui.$, layui.laydate, a))
        })
    } else {
        if (typeof define === "function" && define.amd) {
            define(function() {
                return b(jQuery, laydate, a)
            })
        } else {
            (function() {
                window[c] = b(window.$, window.laydate, a)
            })()
        }
    }
}(function(i, n, E) {
    i = i || jQuery;
    if (!i) {
        console.error("该功能必须依赖jQuery插件");
        return {}
    }
    if (!n) {
        console.error("该功能必须先引入Laydate");
        return {}
    }
    E.ready();
    var m = "laydate",
        e = ".layui-laydate",
        l = "layui-this",
        h = "layui-show",
        y = "layui-hide",
        z = "laydate-disabled",
        v = "laydate-day-mark",
        d = "开始日期超出了结束日期<br>建议重新选择",
        s = [100, 200000],
        u = "layui-laydate-static",
        j = "layui-laydate-list",
        p = "laydate-selected",
        D = "layui-laydate-hint",
        a = "laydate-day-prev",
        b = "laydate-day-next",
        C = "layui-laydate-footer",
        r = ".laydate-btns-confirm",
        g = "laydate-time-text",
        o = ".laydate-btns-time",
        q = {
            cn: ["日", "一", "二", "三", "四", "五", "六"],
            en: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
        },
        c = (function() {
            var F = {
                today: function() {
                    var H = new Date();
                    var G = new Date();
                    H.setHours(0, 0, 0, 0);
                    G.setDate(H.getDate() + 1);
                    G.setHours(0, 0, 0, 0);
                    return {
                        title: "今天",
                        value: [H, G - 1]
                    }
                },
                "lastDays-7": function() {
                    var H = new Date();
                    var G = new Date();
                    H.setDate(H.getDate() - 7);
                    H.setHours(0, 0, 0, 0);
                    G.setHours(0, 0, 0, 0);
                    return {
                        title: "过去7天",
                        value: [H, G - 1]
                    }
                },
                "lastDays-30": function() {
                    var H = new Date();
                    var G = new Date();
                    H.setDate(H.getDate() - 30);
                    H.setHours(0, 0, 0, 0);
                    G.setHours(0, 0, 0, 0);
                    return {
                        title: "过去30天",
                        value: [H, G - 1]
                    }
                },
                yesterday: function() {
                    var H = new Date();
                    var G = new Date();
                    H.setDate(H.getDate() - 1);
                    H.setHours(0, 0, 0, 0);
                    G.setHours(0, 0, 0, 0);
                    return {
                        title: "昨天",
                        value: [H, G - 1]
                    }
                },
                lastMonth: function() {
                    var H = new Date();
                    var G = new Date();
                    H.setMonth(H.getMonth() - 1);
                    H.setDate(1);
                    H.setHours(0, 0, 0, 0);
                    G.setDate(1);
                    G.setHours(0, 0, 0, 0);
                    return {
                        title: "上个月",
                        value: [H, G - 1]
                    }
                },
                thisMonth: function() {
                    var H = new Date();
                    var G = new Date();
                    H.setDate(1);
                    H.setHours(0, 0, 0, 0);
                    G.setMonth(G.getMonth() + 1);
                    G.setDate(1);
                    G.setHours(0, 0, 0, 0);
                    return {
                        title: "这个月",
                        value: [H, G - 1]
                    }
                }
            };
            return {
                get: function(G) {
                    return F[G]()
                }
            }
        })(),
        k = {
            quickSelect: function(J) {
                var O = J.config;
                var N = O.dateTime;
                var G = i(J.elemCont[0]);
                var I = i(J.elemMain);
                var L = i(this);
                var H = L.data("status");
                I.find(".laydate-time-select").remove();
                if (H === "list") {
                    L.data("status", "select");
                    G.hide();
                    var M = O.quickSelect || [];
                    var K = [];
                    i.each(M, function(P, Q) {
                        (P % 3) ? "" : K.push(K.length ? "</tr></tr>" : "<tr>");
                        K.push('<td data-time="' + Q + '" ' + (i(O.elem[0]).val() === Q ? ' class="layui-this"' : "") + ">" + Q + "</td>")
                    });
                    K.length && K.push("</tr>");
                    I.append('<div class="laydate-time-select" style="padding: 10px;"><table class="layui-table" lay-skin="nob"><tbody>' + K.join("") + "</tbody></table></div>")
                } else {
                    L.data("status", "list");
                    G.show()
                }
                var F = I.find(".laydate-time-select");
                F.on("click", "table tr td", function() {
                    var Q = i(this);
                    F.find(".layui-this").removeClass("layui-this");
                    Q.addClass("layui-this");
                    var R = Q.data("time");
                    if (!R) {
                        return
                    }
                    var P = R.split(":");
                    i.extend(N, J.systemDate(), {
                        hours: P[0] || 0,
                        minutes: P[1] || 0,
                        seconds: P[2] || 0
                    });
                    J.setValue(J.parse()).remove();
                    O.position === "static" && J.calendar();
                    J.done()
                })
            },
            quickSelectDateRange: function(J) {
                var O = J.config;
                var N = O.dateTime;
                var G = i(J.elemCont[0]);
                var I = i(J.elemMain);
                var K = i(J.elemMain[0]);
                var L = i(this);
                var H = L.data("status");
                if (!J.quickElem) {
                    var F;
                    J.quickElem = i('<div class="laydate-quickselect-panel"><ul></ul></div>');
                    var M = ["<ul>"];
                    i.each(O.quickSelect, function(P, R) {
                        var Q = "";
                        if (typeof R === "string") {
                            Q = c.get(R)
                        } else {
                            if (R.title && R.value) {
                                Q = R
                            }
                        }
                        J.quickElem.find("ul").append(i("<li>" + Q.title + "</li>").data("range", Q.value))
                    });
                    J.quickElem.find("ul li").click(function() {
                        F = clearTimeout(F);
                        var Q = i(this);
                        var P = Q.data("range");
                        Q.addClass(l).siblings("." + l).removeClass(l);
                        if (P && P.length) {
                            J.startDate = J.systemDate(new Date(P[0]));
                            J.endDate = J.systemDate(new Date(P[1]));
                            J.startState = true;
                            J.endState = true
                        }
                        J.stampRange();
                        i(J.footer).find(r)[J.endDate ? "removeClass" : "addClass"](z);
                        if (O.quickConfirm) {
                            i(J.footer).find(r).click()
                        } else {
                            F = setTimeout(function() {
                                F = "";
                                H === "list" && L.click()
                            }, 1000)
                        }
                    })
                }
                J.quickElem.insertBefore(K);
                i(J.elemMain).off("click").on("click", function() {
                    var P = i(this);
                    var R = P.closest(".layui-laydate");
                    var Q = R.find('.laydate-btns-primary[lay-type="quickSelectDateRange"]');
                    if (Q.data("status") === "select" && !F) {
                        Q.click()
                    }
                });
                J.quickElem.animate({
                    left: H === "list" ? 0 : "-" + J.quickElem.outerWidth() + "px"
                });
                if (H === "list") {
                    L.data("status", "select")
                } else {
                    L.data("status", "list")
                }
            }
        },
        f = {
            quickSelect: ['<div class="laydate-footer-btns laydate-footer-btns-primary">', '<span lay-type="quickSelect" class="laydate-btns-primary" data-status="list">快速选择</span>', "</div>"],
            quickSelectDateRange: ['<div class="laydate-footer-btns laydate-footer-btns-primary">', '<span lay-type="quickSelectDateRange" class="laydate-btns-primary" data-status="list">快速选择</span>', "</div>"]
        },
        B = {},
        w = function(J, L) {
            var N = J.config;
            var M = N.dateTime;
            var F = i(N.elem[0]);
            var G = i(J.elemCont);
            var H = i(J.elemMain);
            var I = i(J.footer);
            if (!L) {
                i(I).on("click", ".laydate-btns-primary", function(P) {
                    var O = i(this).attr("lay-type");
                    k[O] && k[O].call(this, J)
                });
                if (N.quickSelect && N.quickSelect.length && N.type === "time" && !N.range) {
                    i(f.quickSelect.join("")).insertBefore(I.find(".laydate-footer-btns").first());
                    I.find('.laydate-btns-primary[data-status="list"]').first().click()
                }
                if (N.quickSelect && N.quickSelect.length && (N.type === "date" || N.type === "datetime") && N.range && N.rangeType !== "divide") {
                    i(f.quickSelectDateRange.join("")).insertBefore(I.find(".laydate-footer-btns").first());
                    I.find('.laydate-btns-primary[data-status="list"]').first().click()
                }
                if (N.quickConfirm && !N.range) {
                    if (N.type === "month" || N.type === "year") {
                        H.on("click", "ul.layui-laydate-list li", function() {
                            i(this).hasClass("laydate-disabled") || I.find(".laydate-btns-confirm").click()
                        })
                    }
                }
                if (!N.range && N.type === "time" && N.simpleModel) {
                    var K = [];
                    i.each(J.format, function(P, O) {
                        switch (O) {
                            case "HH":
                            case "H":
                                K.push(0);
                                break;
                            case "mm":
                            case "m":
                                K.push(1);
                                break;
                            case "ss":
                            case "s":
                                K.push(2);
                                break
                        }
                    });
                    if (K.length !== 3) {
                        H.find("table").hide();
                        G.css({
                            height: "230px"
                        });
                        H.find(".layui-laydate-header").css({
                            paddingLeft: 0,
                            paddingRight: 0
                        });
                        H.css({
                            width: 84 * K.length + 20 + "px"
                        });
                        H.find(".laydate-time-list>li").css({
                            width: 100 / K.length + "%"
                        });
                        i.each(K, function(O, P) {
                            H.find(".laydate-time-list>li").eq(P).addClass("exist")
                        });
                        H.find(".laydate-time-list>li:not(.exist)").hide();
                        if (K.length === 1) {
                            I.hide();
                            H.find(".laydate-time-list ol li").click(function() {
                                i(this).hasClass("laydate-disabled") || I.find(".laydate-btns-confirm").click()
                            })
                        } else {
                            I.show()
                        }
                        H.find(".laydate-time-list>li.exist").first().find("ol").css({
                            borderLeftWidth: "1px"
                        });
                        H.find(".laydate-time-list>li.exist").last().find("ol").css({
                            borderRightWidth: "1px"
                        })
                    }
                }
            }
            if (N.type === "month" && N.subType === "quarter") {
                lay.each(G.find(".laydate-month-list").find("li"), function(P, Q) {
                    Q = i(Q);
                    var O = parseInt(Q.attr("lay-ym"));
                    if (O < 4) {
                        Q.html(Q.html().replace(/月/g, "季度"))
                    } else {
                        Q.hide()
                    }
                });
                if (!L && !F.val()) {
                    lay.each(G.find(".laydate-month-list").find("li.layui-this"), function(P, Q) {
                        Q = i(Q);
                        var R = parseInt(Q.attr("lay-ym"));
                        var O = Math.round((R + 1) / 4);
                        Q.closest(".laydate-month-list").find('li[lay-ym="' + O + '"]').click()
                    });
                    H.find(".layui-laydate-header").off("click", ".laydate-prev-y,.laydate-next-y").on("click", ".laydate-prev-y,.laydate-next-y", function(O) {
                        w(J, true)
                    })
                } else {
                    if (L) {
                        lay.each(G.find(".laydate-month-list").find("li.layui-this"), function(P, Q) {
                            Q = i(Q);
                            var R = parseInt(Q.attr("lay-ym"));
                            if (R > 3) {
                                var O = Math.round((R + 1) / 4);
                                Q.closest(".laydate-month-list").find('li[lay-ym="' + O + '"]').click()
                            }
                        })
                    }
                }
            }
        },
        t = function(J) {
            var F = i(J.elem);
            var V = F.attr("name") || "date";
            var S = (!J.type || J.type === "datetime") ? "" : "width100";
            var G = "laydate-range-divide",
                L = "." + G,
                H = L + "-start",
                U = L + "-end";
            var N = ['<div class="layui-inline ' + G + '">', '<div class="layui-input-inline" ' + S + ">", '<input type="text" class="layui-input ' + G + '-start" name="' + V + '.start" placeholder="开始时间">', "</div>", '<div class="layui-form-mid">~</div>', '<div class="layui-input-inline" ' + S + ">", '<input type="text" class="layui-input ' + G + '-end" name="' + V + '.end" placeholder="结束时间">', "</div>", "</div>"];
            F.hide();
            F.next(L).remove();
            F.parent().css("width", "auto");
            i(N.join("")).insertAfter(F);
            var P = J.done;
            var R = F.val() || J.value;
            var M = "-";
            switch (J.range) {
                case "~":
                case "-":
                    M = J.range;
                    break
            }
            var T = R ? R.split(" " + M + " ") : [];
            var K = T[0] || "";
            var O = T[1] || "";
            var Q = i.extend(true, {}, J, {
                elem: F.next(L).find(H)[0],
                value: K,
                done: function(Z, Y, aa) {
                    var X = i(this.elem[0]).closest(L).find(U);
                    var W = B[X.attr("lay-key")];
                    Y.month = Y.month - 1;
                    i.extend(true, W.config, {
                        min: Y
                    });
                    typeof P === "function" && P.call(this, Z, Y, aa)
                }
            });
            delete Q.range;
            delete Q.rangeType;
            T[1] && (Q.max = T[1]);
            n.render(Q);
            var I = i.extend(true, {}, J, {
                elem: F.next(L).find(U)[0],
                value: O,
                done: function(Y, X, Z) {
                    var W = i(this.elem[0]).closest(L).find(H);
                    var aa = B[W.attr("lay-key")];
                    X.month = X.month - 1;
                    i.extend(true, aa.config, {
                        max: X
                    });
                    typeof P === "function" && P.call(this, Y, X, Z)
                }
            });
            delete I.range;
            delete I.rangeType;
            T[0] && (I.min = T[0]);
            n.render(I)
        };
    i.extend(E, {
        getInstance: function(F) {
            return B[F] ? B[F].obj : null
        },
        destroy: function(F) {
            lay(F).each(function(G, J) {
                J = i(J);
                var H = J.attr("lay-key");
                if (H) {
                    i("#layui-laydate" + H).remove()
                }
                var I = J.clone(true);
                J.replaceWith(I.attr("lay-key", null))
            })
        }
    });
    n.set({
        weekStart: 0
    });
    var x = n.Class;
    x.prototype.render = function() {
        var N = this,
            Q = N.config,
            I = N.lang(),
            P = Q.position === "static",
            K = N.elem = lay.elem("div", {
                id: N.elemID,
                "class": ["layui-laydate", Q.range ? " layui-laydate-range" : "", P ? (" " + u) : "", Q.theme && Q.theme !== "default" && !/^#/.test(Q.theme) ? (" laydate-theme-" + Q.theme) : "", Q.circleMark ? " laydate-theme-circle" : ""].join("")
            }),
            M = N.elemMain = [],
            O = N.elemHeader = [],
            J = N.elemCont = [],
            H = N.table = [],
            L = N.footer = lay.elem("div", {
                "class": C
            });
        if (Q.zIndex) {
            K.style.zIndex = Q.zIndex
        }
        lay.each(new Array(2), function(T) {
            if (!Q.range && T > 0) {
                return true
            }
            var S = lay.elem("div", {
                    "class": "layui-laydate-header"
                }),
                X = [function() {
                    var Y = lay.elem("i", {
                        "class": "layui-icon laydate-icon laydate-prev-y"
                    });
                    Y.innerHTML = "&#xe65a;";
                    return Y
                }(), function() {
                    var Y = lay.elem("i", {
                        "class": "layui-icon laydate-icon laydate-prev-m"
                    });
                    Y.innerHTML = "&#xe603;";
                    return Y
                }(), function() {
                    var Y = lay.elem("div", {
                            "class": "laydate-set-ym"
                        }),
                        Z = lay.elem("span"),
                        aa = lay.elem("span");
                    Y.appendChild(Z);
                    Y.appendChild(aa);
                    return Y
                }(), function() {
                    var Y = lay.elem("i", {
                        "class": "layui-icon laydate-icon laydate-next-m"
                    });
                    Y.innerHTML = "&#xe602;";
                    return Y
                }(), function() {
                    var Y = lay.elem("i", {
                        "class": "layui-icon laydate-icon laydate-next-y"
                    });
                    Y.innerHTML = "&#xe65b;";
                    return Y
                }()],
                R = lay.elem("div", {
                    "class": "layui-laydate-content"
                }),
                U = lay.elem("table"),
                W = lay.elem("thead"),
                V = lay.elem("tr");
            lay.each(X, function(Y, Z) {
                S.appendChild(Z)
            });
            W.appendChild(V);
            lay.each(new Array(6), function(Y) {
                var Z = U.insertRow(0);
                lay.each(new Array(7), function(aa) {
                    if (Y === 0) {
                        var ab = lay.elem("th");
                        ab.innerHTML = I.weeks[(aa + Q.weekStart) % 7];
                        V.appendChild(ab)
                    }
                    Z.insertCell(aa)
                })
            });
            U.insertBefore(W, U.children[0]);
            R.appendChild(U);
            M[T] = lay.elem("div", {
                "class": "layui-laydate-main laydate-main-list-" + T
            });
            M[T].appendChild(S);
            M[T].appendChild(R);
            O.push(X);
            J.push(R);
            H.push(U)
        });
        lay(L).html(function() {
            var R = [],
                S = [];
            if (Q.type === "datetime") {
                R.push('<span lay-type="datetime" class="laydate-btns-time">' + I.timeTips + "</span>")
            }
            if (Q.lang === "en") {
                R.push('<div class="laydate-footer-tips"><span style="width:20px;height:20px;background-color:#D51E35;"></span><span>IELTS TEST DAY</span></div>')
            } else {
                R.push('<div class="laydate-footer-tips"><span style="width:20px;height:20px;background-color:#D51E35;"></span><span>雅思考试日</span></div>')
            }
            lay.each(Q.btns, function(T, U) {
                var V = I.tools[U] || "btn";
                if (Q.range && U === "now") {
                    return
                }
                if (P && U === "clear") {
                    V = Q.lang === "cn" ? "重置" : "Reset"
                }
                S.push('<span lay-type="' + U + '" class="laydate-btns-' + U + '">' + V + "</span>")
            });
            R.push('<div class="laydate-footer-btns">' + S.join("") + "</div>");
            return R.join("")
        }());
        lay.each(M, function(S, R) {
            K.appendChild(R)
        });
        Q.showBottom && K.appendChild(L);
        if (/^#/.test(Q.theme)) {
            var G = lay.elem("style"),
                F = ["#{{id}} .layui-laydate-header{background-color:{{theme}};}", "#{{id}} .layui-this" + (Q.circleMark ? ">div" : "") + ",#{{id}} li.layui-this{background-color:{{theme}} !important;}"].join("").replace(/{{id}}/g, N.elemID).replace(/{{theme}}/g, Q.theme);
            if ("styleSheet" in G) {
                G.setAttribute("type", "text/css");
                G.styleSheet.cssText = F
            } else {
                G.innerHTML = F
            }
            lay(K).addClass("laydate-theme-molv");
            K.appendChild(G)
        }
        N.remove(x.thisElemDate);
        P ? Q.elem.append(K) : (document.body.appendChild(K), N.position());
        N.checkDate().calendar();
        N.changeEvent();
        x.thisElemDate = N.elemID;
        typeof Q.ready === "function" && Q.ready(lay.extend({}, Q.dateTime, {
            month: Q.dateTime.month + 1
        }))
    };
    x.prototype.remove = function(I) {
        var H = this,
            F = H.config,
            G = lay("#" + (I || H.elemID));
        if (!G.hasClass(u)) {
            if (H.index.toString() !== H.config.elem.attr("lay-key")) {
                return H
            }
            H.checkDate(function() {
                G.remove()
            })
        }
        return H
    };
    x.prototype.checkDate = function(M) {
        var I = this,
            G = new Date(),
            S = I.config,
            R = S.dateTime = S.dateTime || I.systemDate(),
            P, L, F = I.bindElem || S.elem[0],
            H = I.isInput(F) ? "val" : "html",
            O = I.isInput(F) ? F.value : (S.position === "static" ? "" : F.innerHTML),
            N = function(T) {
                if (T.year > s[1]) {
                    T.year = s[1], L = true
                }
                if (T.month > 11) {
                    T.month = 11, L = true
                }
                if (T.seconds > 59) {
                    T.seconds = 0, T.minutes++, L = true
                }
                if (T.minutes > 59) {
                    T.minutes = 0, T.hours++, L = true
                }
                if (T.hours > 23) {
                    T.hours = 0, L = true
                }
                P = n.getEndDate(T.month + 1, T.year);
                if (T.date > P) {
                    T.date = P, L = true
                }
            },
            J = function(X, W, T) {
                var V = ["startTime", "endTime"];
                var U = ["startState", "endState"];
                W = (W.match(I.EXP_SPLIT) || []).slice(1);
                T = T || 0;
                if (S.range) {
                    I[U[T]] = !!I[V[T]];
                    I[V[T]] = I[V[T]] || {}
                }
                if (X.length >= 0) {
                    X = X[T]
                }
                lay.each(I.format, function(Y, Z) {
                    var aa = parseFloat(W[Y]);
                    if (W[Y].length < Z.length) {
                        L = true
                    }
                    if (/yyyy|y/.test(Z)) {
                        if (aa < s[0]) {
                            aa = s[0], L = true
                        }
                        X.year = aa
                    } else {
                        if (/MM|M/.test(Z)) {
                            if (aa < 1) {
                                aa = 1, L = true
                            }
                            X.month = aa - 1
                        } else {
                            if (/dd|d/.test(Z)) {
                                if (aa < 1) {
                                    aa = 1, L = true
                                }
                                X.date = aa
                            } else {
                                if (/HH|H/.test(Z)) {
                                    if (aa < 0) {
                                        aa = 0, L = true
                                    }
                                    if (aa > 23) {
                                        aa = 23, L = true
                                    }
                                    X.hours = aa;
                                    S.range && (I[V[T]].hours = aa)
                                } else {
                                    if (/mm|m/.test(Z)) {
                                        if (aa < 0) {
                                            aa = 0, L = true
                                        }
                                        if (aa > 59) {
                                            aa = 59, L = true
                                        }
                                        X.minutes = aa;
                                        S.range && (I[V[T]].minutes = aa)
                                    } else {
                                        if (/ss|s/.test(Z)) {
                                            if (aa < 0) {
                                                aa = 0, L = true
                                            }
                                            if (aa > 59) {
                                                aa = 59, L = true
                                            }
                                            X.seconds = aa;
                                            S.range && (I[V[T]].seconds = aa)
                                        }
                                    }
                                }
                            }
                        }
                    }
                });
                N(X)
            };
        if (M === "limit") {
            return N(R), I
        }
        O = O || S.value;
        if (typeof O === "string") {
            O = O.replace(/\s+/g, " ").replace(/^\s|\s$/g, "")
        }
        if (I.startState && !I.endState) {
            delete I.startState;
            I.endState = true
        }
        if (typeof O === "string" && O) {
            if (S.dateTimes) {
                var Q = O.split(S.multiple);
                var K = 0;
                i.each(Q, function(T, U) {
                    if (U) {
                        if (I.EXP_IF.test(U)) {
                            S.dateTimes[K] = S.dateTimes[T] || {};
                            J(S.dateTimes, U, K);
                            K++
                        } else {
                            I.hint("日期格式不合法<br>必须遵循下述格式：<br>" + (S.range ? (S.format + " " + S.range + " " + S.format) : S.format) + "<br>已为你重置");
                            L = true
                        }
                    }
                });
                S.dateTimes.sort(function(U, T) {
                    return U.year - T.year || U.month - T.month || U.date - T.date
                });
                S.dateTimes.length ? S.dateTime = i.extend({}, S.dateTimes[0]) : ""
            } else {
                if (I.EXP_IF.test(O)) {
                    if (S.range) {
                        O = O.split(" " + S.range + " ");
                        I.startDate = I.startDate || I.systemDate();
                        I.endDate = I.endDate || I.systemDate();
                        S.dateTime = lay.extend({}, I.startDate);
                        lay.each([I.startDate, I.endDate], function(T, U) {
                            J(U, O[T], T)
                        })
                    } else {
                        J(R, O)
                    }
                } else {
                    I.hint("日期格式不合法<br>必须遵循下述格式：<br>" + (S.range ? (S.format + " " + S.range + " " + S.format) : S.format) + "<br>已为你重置");
                    L = true
                }
            }
        } else {
            if (O && O.constructor === Date) {
                S.dateTime = I.systemDate(O)
            } else {
                S.dateTime = I.systemDate();
                delete I.startState;
                delete I.endState;
                delete I.startDate;
                delete I.endDate;
                delete I.startTime;
                delete I.endTime
            }
        }
        N(R);
        if (L && O) {
            I.setValue(S.range ? (I.endDate ? I.parse() : "") : I.parse())
        }
        M && M();
        return I
    };
    x.prototype.choose = function(G) {
        var J = this,
            N = J.config,
            M = N.dateTime,
            I = lay(J.elem).find("td"),
            K = G.attr("lay-ymd").split("-"),
            H = function(P) {
                var O = new Date();
                P && lay.extend(M, K);
                if (N.range) {
                    J.startDate ? lay.extend(J.startDate, K) : (J.startDate = lay.extend({}, K, J.startTime));
                    J.startYMD = K
                }
            };
        K = {
            year: K[0] | 0,
            month: (K[1] | 0) - 1,
            date: K[2] | 0
        };
        if (G.hasClass(z)) {
            return
        }
        if (N.range) {
            lay.each(["startTime", "endTime"], function(O, P) {
                J[P] = J[P] || {
                    hours: 0,
                    minutes: 0,
                    seconds: 0
                }
            });
            if (J.endState) {
                H();
                delete J.endState;
                delete J.endDate;
                J.startState = true;
                I.removeClass(l + " " + p);
                G.addClass(l)
            } else {
                if (J.startState) {
                    G.addClass(l);
                    J.endDate ? lay.extend(J.endDate, K) : (J.endDate = lay.extend({}, K, J.endTime));
                    if (J.newDate(K).getTime() <= J.newDate(J.startYMD).getTime()) {
                        var F = lay.extend({}, J.endDate, {
                            hours: J.startDate.hours,
                            minutes: J.startDate.minutes,
                            seconds: J.startDate.seconds
                        });
                        lay.extend(J.endDate, J.startDate, {
                            hours: J.endDate.hours,
                            minutes: J.endDate.minutes,
                            seconds: J.endDate.seconds
                        });
                        J.startDate = F
                    }
                    N.showBottom || J.done();
                    J.stampRange();
                    J.endState = true;
                    if (J.newDate(K).getTime() === J.newDate(J.startYMD).getTime() && J.newDate(J.startTime).getTime() > J.newDate(J.endTime).getTime()) {
                        J.endState = false
                    }
                    J.done(null, "change")
                } else {
                    G.addClass(l);
                    H();
                    J.startState = true
                }
            }
            lay(J.footer).find(r)[J.endState ? "removeClass" : "addClass"](z)
        } else {
            if (N.position === "static") {
                H(true);
                J.calendar().done().done(null, "change")
            } else {
                if (N.type === "date") {
                    if (N.dateTimes) {
                        if (G.hasClass(l)) {
                            var L = -1;
                            lay.each(N.dateTimes, function(P, O) {
                                if (O.year === K.year && O.month === K.month && O.date === K.date) {
                                    L = P;
                                    return true
                                }
                            });
                            if (L >= 0) {
                                N.dateTimes.splice(L, 1);
                                G.removeClass(l)
                            }
                        } else {
                            N.dateTimes.push(K);
                            G.addClass(l)
                        }
                    } else {
                        H(true);
                        J.setValue(J.parse()).remove().done()
                    }
                } else {
                    if (N.type === "datetime") {
                        H(true);
                        J.calendar().done(null, "change")
                    }
                }
            }
        }
    };
    x.prototype.parse = function(L, G) {
        var J = this,
            F = J.config,
            K = G || (L ? lay.extend({}, J.endDate, J.endTime) : (F.range ? lay.extend({}, J.startDate, J.startTime) : F.dateTime)),
            I = J.format.concat();
        var M = F.dateTimes ? (F.dateTimes.sort(function(O, N) {
            return O.year - N.year || O.month - N.month || O.date - N.date
        })) : [K];
        var H = [];
        lay.each(M, function(N, O) {
            var P = I.concat();
            lay.each(P, function(Q, R) {
                if (/yyyy|y/.test(R)) {
                    P[Q] = lay.digit(O.year, R.length)
                } else {
                    if (/MM|M/.test(R)) {
                        P[Q] = lay.digit(O.month + 1, R.length)
                    } else {
                        if (/dd|d/.test(R)) {
                            P[Q] = lay.digit(O.date, R.length)
                        } else {
                            if (/HH|H/.test(R)) {
                                P[Q] = lay.digit(O.hours, R.length)
                            } else {
                                if (/mm|m/.test(R)) {
                                    P[Q] = lay.digit(O.minutes, R.length)
                                } else {
                                    if (/ss|s/.test(R)) {
                                        P[Q] = lay.digit(O.seconds, R.length)
                                    }
                                }
                            }
                        }
                    }
                }
            });
            if (F.range && !L) {
                H.push(P.join("") + " " + F.range + " " + J.parse(1))
            } else {
                H.push(P.join(""))
            }
        });
        return H.join(F.multiple ? F.multiple : "")
    };
    x.prototype.calendar = function(R) {
        var L = this,
            T = L.config,
            S = R || T.dateTime,
            I = new Date(),
            F, N, Q, H = L.lang(),
            P = T.type !== "date" && T.type !== "datetime",
            K = R ? 1 : 0,
            J = lay(L.table[K]).find("td"),
            M = lay(L.elemHeader[K][2]).find("span");
        if (S.year < s[0]) {
            S.year = s[0], L.hint("最低只能支持到公元" + s[0] + "年")
        }
        if (S.year > s[1]) {
            S.year = s[1], L.hint("最高只能支持到公元" + s[1] + "年")
        }
        if (!L.firstDate) {
            L.firstDate = lay.extend({}, S)
        }
        I.setFullYear(S.year, S.month, 1);
        F = (I.getDay() + (7 - T.weekStart)) % 7;
        N = n.getEndDate(S.month || 12, S.year);
        Q = n.getEndDate(S.month + 1, S.year);
        var G = T.dateTimes ? T.dateTimes.map(function(U) {
            return U.year + "-" + (U.month + 1) + "-" + U.date
        }) : [];
        lay.each(J, function(V, Y) {
            var W = [S.year, S.month],
                U = 0;
            Y = lay(Y);
            Y.removeAttr("class");
            if (V < F) {
                U = N - F + V;
                Y.addClass("laydate-day-prev");
                W = L.getAsYM(S.year, S.month, "sub")
            } else {
                if (V >= F && V < Q + F) {
                    U = V - F;
                    if (!T.range && !T.dateTimes) {
                        U + 1 === S.date && Y.addClass(l)
                    }
                } else {
                    U = V - Q - F;
                    Y.addClass("laydate-day-next");
                    W = L.getAsYM(S.year, S.month)
                }
            }
            W[1]++;
            W[2] = U + 1;
            Y.attr("lay-ymd", W.join("-")).html("<div>" + W[2] + "</div>");
            if (G.indexOf(Y.attr("lay-ymd")) !== -1) {
                Y.addClass(l)
            }
            L.mark(Y, W).limit(Y, {
                year: W[0],
                month: W[1] - 1,
                date: W[2]
            }, V);
            if (T.onlyEnableMark && !Y.hasClass(z)) {
                var X = new RegExp("\\b" + v + "\\b").test(Y.length === 1 ? Y[0].innerHTML : "");
                if (!X) {
                    Y.addClass(z)
                }
            }
        });
        lay(M[0]).attr("lay-ym", S.year + "-" + (S.month + 1));
        lay(M[1]).attr("lay-ym", S.year + "-" + (S.month + 1));
        if (T.lang === "cn") {
            lay(M[0]).attr("lay-type", "year").html(S.year + "年");
            lay(M[1]).attr("lay-type", "month").html((S.month + 1) + "月")
        } else {
            lay(M[0]).attr("lay-type", "month").html(H.month[S.month]);
            lay(M[1]).attr("lay-type", "year").html(S.year)
        }
        if (P) {
            if (T.range) {
                R ? L.endDate = (L.endDate || {
                    year: S.year + (T.type === "year" ? 1 : 0),
                    month: S.month + (T.type === "month" ? 0 : -1)
                }) : (L.startDate = L.startDate || {
                    year: S.year,
                    month: S.month
                });
                if (R) {
                    L.listYM = [
                        [L.startDate.year, L.startDate.month + 1],
                        [L.endDate.year, L.endDate.month + 1]
                    ];
                    L.list(T.type, 0).list(T.type, 1);
                    T.type === "time" ? L.setBtnStatus("时间", lay.extend({}, L.systemDate(), L.startTime), lay.extend({}, L.systemDate(), L.endTime)) : L.setBtnStatus(true)
                }
            }
            if (!T.range) {
                L.listYM = [
                    [S.year, S.month + 1]
                ];
                L.list(T.type, 0)
            }
        }
        if (T.range && !R) {
            var O = L.getAsYM(S.year, S.month);
            L.calendar(lay.extend({}, S, {
                year: O[0],
                month: O[1]
            }))
        }
        if (!T.range) {
            L.limit(lay(L.footer).find(r), null, 0, ["hours", "minutes", "seconds"])
        }
        if (T.range && R && !P) {
            L.stampRange()
        }
        return L
    };
    var A = n.render;
    n.render = function(F) {
        i.each(i(F.elem), function(K, H) {
            var G = i(H);
            var P = G.attr("lay-data");
            if (P) {
                try {
                    P = new Function("return " + P)()
                } catch (M) {
                    console.error("Laydate element property lay-data configuration item has a syntax error: " + P)
                }
            }
            P = P || {};
            delete P.elem;
            H.eventHandler = false;
            G.attr("lay-key", null);
            var J = i.extend(true, {}, F, {
                elem: H
            }, P);
            if (J.range && J.rangeType === "divide") {
                return t(J)
            }
            if (J.weekStart || J.weekStart === 0) {
                if (!/^[0-6]$/.test(J.weekStart)) {
                    if (/^[日, 一, 二, 三, 四, 五, 六]$/.test(J.weekStart)) {
                        J.weekStart = q.cn.indexOf(J.weekStart)
                    } else {
                        if (/^[Su, Mo, Tu, We, Th, Fr, Sa]$/.test(J.weekStart)) {
                            J.weekStart = q.en.indexOf(J.weekStart)
                        } else {
                            J.weekStart = 0
                        }
                    }
                }
            }
            if (J.type === "quarter") {
                J.type = "month";
                J.subType = "quarter";
                J.format = J.format || "yyyy年第M季度"
            }
            if (J.multiple && typeof J.multiple === "string" && (!J.type || J.type === "date") && !J.range) {
                J.dateTimes = []
            } else {
                J.multiple = false;
                J.dateTimes = null
            }
            var O = A(J);
            B[O.obj.index] = O;
            var I = O.config.ready;
            O.config.ready = function(Q) {
                var R = this;
                w(O.obj);
                typeof I === "function" && I.call(R, Q)
            };
            var N = O.config.change;
            O.config.change = function(S, Q, T) {
                var R = this;
                w(O.obj, true);
                typeof N === "function" && N.call(R, S, Q, T)
            };
            var L = O.obj.render;
            O.obj.render = function() {
                var Q = this;
                if (Q.index.toString() === Q.config.elem.attr("lay-key")) {
                    L.call(Q)
                }
            }
        })
    };
    return E
});